@startuml
!define RECTANGLE class

RECTANGLE "Client System" as Client
RECTANGLE "Document Request API" as DocRequestAPI
RECTANGLE "Kafka Event Hub" as Kafka
RECTANGLE "Document Processing Service" as DocProcessingService
RECTANGLE "Monitoring Service" as MonitoringService
RECTANGLE "Reference Data API" as RefDataAPI
RECTANGLE "Thunderhead API" as ThunderheadAPI
RECTANGLE "OMS Database" as OMSDB
RECTANGLE "Recovery Scheduled Job" as RecoveryJob

Client --> DocRequestAPI : Document Generation Request
DocRequestAPI --> RefDataAPI : Validate Request
DocRequestAPI --> OMSDB : Store Request
DocRequestAPI --> Kafka : Publish Processing Event
Kafka --> DocProcessingService : Processing Event
DocProcessingService --> RefDataAPI : Enrich Request
DocProcessingService --> ThunderheadAPI : Generate Document
DocProcessingService --> OMSDB : Update Processing/Batch Details
DocProcessingService --> Kafka : Publish Monitoring Event
Kafka --> MonitoringService : Monitoring Event
MonitoringService --> ThunderheadAPI : Poll Status
MonitoringService --> OMSDB : Update Status
MonitoringService --> Kafka : Publish Final Status
RecoveryJob --> OMSDB : Query Error Table
RecoveryJob --> Kafka : Publish Retry Event

note left of Client
- Follows all security, gateway,
  and validation processes as
  described in the overall architecture
  (oms-architecture-overview)
end note

note left of DocRequestAPI
- Receives and validates requests
- Stores in DB
- Publishes processing event to Kafka
end note

note bottom of DocProcessingService
- Subscribes to processing events
- Enriches and generates documents
- Updates DB and publishes monitoring event
end note

note right of MonitoringService
- Subscribes to monitoring events
- Polls Thunderhead for status
- Updates DB and publishes final status
end note

note bottom of OMSDB
- Central storage for requests, statuses, batch details
end note

note bottom of ThunderheadAPI
- SOAP API
- REST-to-SOAP via Oracle API GW
end note

note bottom of Kafka
- Event streaming for all orchestration
end note

note top of RecoveryJob
- Periodically checks error table in OMS DB
- Publishes retry events to Kafka for failed requests
end note

@enduml

